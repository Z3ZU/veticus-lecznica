// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 6FdjgAyps8XDCSRfwRbJca
// Component: Re6zUsQooKFE

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { useScreenVariants as useScreenVariantsduUUfDf12Sy } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: DuU_UFDf12SY/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_veticus_lecznica.module.css"; // plasmic-import: 6FdjgAyps8XDCSRfwRbJca/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: Re6zUsQooKFE/css

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  main?: Flex__<"div">;
  oNas?: Flex__<"div">;
  oNasBackground?: Flex__<"div">;
  kontakt?: Flex__<"div">;
  kontaktBackground?: Flex__<"div">;
  uslugi?: Flex__<"div">;
  uslugiBackground?: Flex__<"div">;
  uslugi2?: Flex__<"div">;
  uslugiBackground2?: Flex__<"div">;
  uslugi3?: Flex__<"div">;
  uslugiBackground3?: Flex__<"div">;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsduUUfDf12Sy()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicHomepage.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"main"}
          data-plasmic-override={overrides.main}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.main
          )}
        >
          {false ? (
            <div className={classNames(projectcss.all, sty.freeBox___6Ppql)}>
              <img
                alt={""}
                className={classNames(
                  projectcss.all,
                  projectcss.img,
                  sty.img__t6I05
                )}
                src={"/plasmic/veticus_lecznica/images/photo1.jpg"}
              />
            </div>
          ) : null}
          <div className={classNames(projectcss.all, sty.freeBox__sr3Wi)}>
            <img
              alt={""}
              className={classNames(
                projectcss.all,
                projectcss.img,
                sty.img__aWgnM
              )}
              src={"/plasmic/veticus_lecznica/images/logo.png"}
            />

            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? false : false
            ) ? (
              <div className={classNames(projectcss.all, sty.freeBox__gIrmH)} />
            ) : null}
            <img
              alt={""}
              className={classNames(
                projectcss.all,
                projectcss.img,
                sty.img__kvRb
              )}
              src={"/plasmic/veticus_lecznica/images/logoIzba1Png.png"}
            />
          </div>
          <div
            data-plasmic-name={"oNas"}
            data-plasmic-override={overrides.oNas}
            className={classNames(projectcss.all, sty.oNas)}
          >
            <div
              data-plasmic-name={"oNasBackground"}
              data-plasmic-override={overrides.oNasBackground}
              className={classNames(projectcss.all, sty.oNasBackground)}
            >
              <img
                alt={""}
                className={classNames(
                  projectcss.all,
                  projectcss.img,
                  sty.img__pzVZp
                )}
                src={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "/plasmic/veticus_lecznica/images/pexelsBasMasseus1203309MobileJpg.jpg"
                    : "/plasmic/veticus_lecznica/images/pexelsBasMasseus1203309Jpg.jpg"
                }
              />
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__qcpd6
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly")
                ? "O nas"
                : "O nas\n"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__nf4NP
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly")
                ? 'Gabinet "Veticus" to nowoczesny zak\u0142ad weterynaryjny. Zajmujemy si\u0119 leczeniem zwierz\u0105t towarzysz\u0105cych\ni gospodarskich.\n\nCechuje nas do\u015bwiadczenie w pracy ze zwierz\u0119tami i pasja zwi\u0105zana  z wykonywaniem zawodu lekarza weterynarii. Nasz\u0105 ambicj\u0105 jest tworzenie miejsca, kt\u00f3re oferuje fachow\u0105 pomoc oraz przyjazn\u0105 atmosfer\u0119.\n'
                : '\nGabinet "Veticus" to nowoczesny zak\u0142ad weterynaryjny. Zajmujemy si\u0119 leczeniem zwierz\u0105t towarzysz\u0105cych i gospodarskich.\n\nCechuje nas do\u015bwiadczenie w pracy ze zwierz\u0119tami i pasja zwi\u0105zana \nz wykonywaniem zawodu lekarza weterynarii. Nasz\u0105 ambicj\u0105 jest tworzenie miejsca, kt\u00f3re oferuje fachow\u0105 pomoc oraz przyjazn\u0105 atmosfer\u0119.\n'}
            </div>
            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? false : false
            ) ? (
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__bsss9
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "\n\n\n"
                  : "\n\n\n"}
              </div>
            ) : null}
          </div>
          <div
            data-plasmic-name={"kontakt"}
            data-plasmic-override={overrides.kontakt}
            className={classNames(projectcss.all, sty.kontakt)}
          >
            <div
              data-plasmic-name={"kontaktBackground"}
              data-plasmic-override={overrides.kontaktBackground}
              className={classNames(projectcss.all, sty.kontaktBackground)}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__cNzV8
              )}
            >
              {
                "poniedzia\u0142ek - pi\u0105tek \n12:00 - 18:00\nsobota\n10:00 - 14:00\n"
              }
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__sFLyi
              )}
            >
              {
                "S\u0119dzisz\u00f3w Ma\u0142opolski\nul. Tarnowskich 1\nkontakt@veticus-lecznica.pl\ntel. 506 039 315"
              }
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__h2U4J
              )}
            >
              {
                "Przypadki wymagaj\u0105ce natychmiastowej pomocy przyjmujemy poza kolejno\u015bci\u0105, prosimy jednak poinformowa\u0107 nas o przybyciu, je\u017celi jest taka mo\u017cliwo\u015b\u0107.\nPomocy w nag\u0142ych przypadkach udzielamy ca\u0142odobowo.\n"
              }
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__bdiLe
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly")
                ? "Kontakt\n"
                : "Kontakt"}
            </div>
          </div>
          <div
            data-plasmic-name={"uslugi"}
            data-plasmic-override={overrides.uslugi}
            className={classNames(projectcss.all, sty.uslugi)}
          >
            <div
              data-plasmic-name={"uslugiBackground"}
              data-plasmic-override={overrides.uslugiBackground}
              className={classNames(projectcss.all, sty.uslugiBackground)}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__l8FYe
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly")
                ? "Us\u0142ugi\n"
                : "Us\u0142ugi"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__szNM
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u25a0 kardiologia"}
                  </span>
                  <React.Fragment>
                    {
                      " (badania przegl\u0105dowe serca, diagnostyka wad serca, diagnostyka chor\u00f3b nabytych, badanie radiologiczne klatki piersiowej)\n\n"
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u25a0 chirurgia"}
                  </span>
                  <React.Fragment>
                    {
                      " (szeroki zakres zabieg\u00f3w chirurgicznych: zabiegi na jamie brzusznej, zabiegi na klatce piersiowej, zabiegi ortopedyczne)\n\n"
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u25a0 onkologia  "}
                  </span>
                  <React.Fragment>
                    {"(chirurgia onkologiczna)\n\n"}
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u25a0 dermatologia  "}
                  </span>
                  <React.Fragment>
                    {
                      "(diagnostyka dermatologiczna, badania bakteriologiczne, zeskrobiny sk\u00f3ry, biopsje sk\u00f3ry)\n\n"
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u25a0 okulistyka "}
                  </span>
                  <React.Fragment>
                    {"(zabiegi na ga\u0142ce ocznej, korekcja powiek)\n\n"}
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u25a0 stomatologia "}
                  </span>
                  <React.Fragment>
                    {
                      "(usuwanie kamienia naz\u0119bnego ultrad\u017awi\u0119kami, leczenie chor\u00f3b przyz\u0119bia, ekstrakcja z\u0119b\u00f3w, resorpcja korzeni, stomatologia gryzoni i zaj\u0119czak\u00f3w)\n\n"
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u25a0 po\u0142o\u017cnictwo i rozr\u00f3d "}
                  </span>
                  <React.Fragment>
                    {
                      "(wyznaczanie terminu krycia, diagnoza ci\u0105\u017cy, kontrola przebiegu ci\u0105\u017cy)\n\n"
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u25a0 badania laboratoryjne "}
                  </span>
                  <React.Fragment>
                    {
                      "(morfologia, biochemia, hormony, badanie moczu, badanie ka\u0142u, testy w kierunku chor\u00f3b zaka\u017anych)\n\n"
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u25a0 diagnostyka obrazowa "}
                  </span>
                  <React.Fragment>
                    {"(badania USG, RTG, rentgen)\n\n"}
                  </React.Fragment>
                </React.Fragment>
              ) : (
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u25a0 kardiologia"}
                  </span>
                  <React.Fragment>
                    {
                      " (badania przegl\u0105dowe serca, diagnostyka wad serca, diagnostyka chor\u00f3b nabytych, badanie radiologiczne klatki piersiowej)\n\n"
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u25a0 chirurgia"}
                  </span>
                  <React.Fragment>
                    {
                      " (szeroki zakres zabieg\u00f3w chirurgicznych: zabiegi na jamie brzusznej, zabiegi na klatce piersiowej, zabiegi ortopedyczne)\n\n"
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u25a0 onkologia  "}
                  </span>
                  <React.Fragment>
                    {"(chirurgia onkologiczna)\n\n"}
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u25a0 dermatologia  "}
                  </span>
                  <React.Fragment>
                    {
                      "(diagnostyka dermatologiczna, badania bakteriologiczne, zeskrobiny sk\u00f3ry, biopsje sk\u00f3ry)\n\n"
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u25a0 okulistyka "}
                  </span>
                  <React.Fragment>
                    {"(zabiegi na ga\u0142ce ocznej, korekcja powiek)\n\n"}
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u25a0 stomatologia "}
                  </span>
                  <React.Fragment>
                    {
                      "(usuwanie kamienia naz\u0119bnego ultrad\u017awi\u0119kami, leczenie chor\u00f3b przyz\u0119bia, ekstrakcja z\u0119b\u00f3w, resorpcja korzeni, stomatologia gryzoni i zaj\u0119czak\u00f3w)\n\n"
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u25a0 po\u0142o\u017cnictwo i rozr\u00f3d "}
                  </span>
                  <React.Fragment>
                    {
                      "(wyznaczanie terminu krycia, diagnoza ci\u0105\u017cy, kontrola przebiegu ci\u0105\u017cy)\n\n"
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u25a0 badania laboratoryjne "}
                  </span>
                  <React.Fragment>
                    {
                      "(morfologia, biochemia, hormony, badanie moczu, badanie ka\u0142u, testy w kierunku chor\u00f3b zaka\u017anych)\n\n"
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u25a0 diagnostyka obrazowa "}
                  </span>
                  <React.Fragment>
                    {"(badania USG, RTG, rentgen)\n"}
                  </React.Fragment>
                </React.Fragment>
              )}
            </div>
          </div>
          <div
            data-plasmic-name={"uslugi2"}
            data-plasmic-override={overrides.uslugi2}
            className={classNames(projectcss.all, sty.uslugi2)}
          >
            <div
              data-plasmic-name={"uslugiBackground2"}
              data-plasmic-override={overrides.uslugiBackground2}
              className={classNames(projectcss.all, sty.uslugiBackground2)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___4P1Rr
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  {
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        projectcss.plasmic_default__inline,
                        sty.link___7FCRt
                      )}
                      component={Link}
                      href={
                        "https://drive.google.com/file/d/10A3J0VwX-NDRtvZpMrGQ3FkVlFJZKOjI/view?usp=sharing"
                      }
                      platform={"nextjs"}
                    >
                      {"Informacja o wp\u0142ywie RTG "}
                    </PlasmicLink__>
                  }
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>
            </div>
          </div>
          {(
            hasVariant(globalVariants, "screen", "mobileOnly") ? true : false
          ) ? (
            <div
              data-plasmic-name={"uslugi3"}
              data-plasmic-override={overrides.uslugi3}
              className={classNames(projectcss.all, sty.uslugi3)}
            />
          ) : null}
          <div
            data-plasmic-name={"uslugiBackground3"}
            data-plasmic-override={overrides.uslugiBackground3}
            className={classNames(projectcss.all, sty.uslugiBackground3)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ls077
              )}
            >
              <React.Fragment>
                <React.Fragment>{""}</React.Fragment>
                {
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      projectcss.plasmic_default__inline,
                      sty.link__lC6Wr
                    )}
                    component={Link}
                    href={
                      "https://drive.google.com/file/d/10A3J0VwX-NDRtvZpMrGQ3FkVlFJZKOjI/view?usp=sharing"
                    }
                    platform={"nextjs"}
                  >
                    {"Informacja o wp\u0142ywie RTG "}
                  </PlasmicLink__>
                }
                <React.Fragment>{""}</React.Fragment>
              </React.Fragment>
            </div>
          </div>
          {(
            hasVariant(globalVariants, "screen", "mobileOnly") ? true : false
          ) ? (
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__mrbJ
              )}
            >
              {"3333px"}
            </div>
          ) : null}
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  main: [
    "main",
    "oNas",
    "oNasBackground",
    "kontakt",
    "kontaktBackground",
    "uslugi",
    "uslugiBackground",
    "uslugi2",
    "uslugiBackground2",
    "uslugi3",
    "uslugiBackground3"
  ],
  oNas: ["oNas", "oNasBackground"],
  oNasBackground: ["oNasBackground"],
  kontakt: ["kontakt", "kontaktBackground"],
  kontaktBackground: ["kontaktBackground"],
  uslugi: ["uslugi", "uslugiBackground"],
  uslugiBackground: ["uslugiBackground"],
  uslugi2: ["uslugi2", "uslugiBackground2"],
  uslugiBackground2: ["uslugiBackground2"],
  uslugi3: ["uslugi3"],
  uslugiBackground3: ["uslugiBackground3"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  main: "div";
  oNas: "div";
  oNasBackground: "div";
  kontakt: "div";
  kontaktBackground: "div";
  uslugi: "div";
  uslugiBackground: "div";
  uslugi2: "div";
  uslugiBackground2: "div";
  uslugi3: "div";
  uslugiBackground3: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "main") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("main"),
  {
    // Helper components rendering sub-elements
    oNas: makeNodeComponent("oNas"),
    oNasBackground: makeNodeComponent("oNasBackground"),
    kontakt: makeNodeComponent("kontakt"),
    kontaktBackground: makeNodeComponent("kontaktBackground"),
    uslugi: makeNodeComponent("uslugi"),
    uslugiBackground: makeNodeComponent("uslugiBackground"),
    uslugi2: makeNodeComponent("uslugi2"),
    uslugiBackground2: makeNodeComponent("uslugiBackground2"),
    uslugi3: makeNodeComponent("uslugi3"),
    uslugiBackground3: makeNodeComponent("uslugiBackground3"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Veticus Wojciech Kubas",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
